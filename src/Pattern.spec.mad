import { identity } from "Function"
import { Just, Nothing } from "Maybe"
import String from "String"

import { caseN2, report } from "Study"

import { Fission, Fusion, destructure, structure } from "@/Pattern"
import { capitalize } from "@/String"



camelSplit = Fission(
  "",
  (_, xs) => pipe(
    String.replace("([A-Z])", " $1"),
    String.split(" "),
  )(xs),
)

camel = Fusion("", identity, capitalize)

report(
  caseN2(destructure),
  "destructure",
  [#[#[camelSplit, "oneTwoThree"], ["one", "Two", "Three"]]],
)

report(
  caseN2(structure),
  "structure",
  [
    #[#[camel, ["alpha", "beta", "gamma"]], "alphaBetaGamma"],
    #[#[camel, []], ""],
    #[#[camel, ["one"]], "one"],
    #[
      #[Fusion("_", String.toUpper, String.toUpper), ["hey", "pay", "attention"]],
      "HEY_PAY_ATTENTION",
    ],
  ],
)
