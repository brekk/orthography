import { caseN2, report } from "Study"

import J from "@/Joiners"
import {
  Pair,
  Reversible,
  bidi,
  get,
  pairs,
  set,
  translate,
  validInput,
  validatePair,
} from "@/Orthography"
import S from "@/Splitters"



camelConstant = translate(Reversible(Pair(S.camel, J.camel), pairs.constant))
dotKebab = translate(bidi(pairs.dot, pairs.kebab))
pascalSentence = translate(bidi(pairs.pascal, pairs.sentence))
pascalSnakeTrain = translate(bidi(pairs.pascalSnake, pairs.train))
snakePath = translate(bidi(pairs.snake, pairs.path))
spaceCamel = translate(bidi(pairs.space, pairs.camel))

report(
  camelConstant(true),
  "translate - camel to constant",
  [#["alphaBetaGamma", "ALPHA_BETA_GAMMA"], #["", ""]],
)

report(
  camelConstant(false),
  "translate - constant to camel",
  [#["ALPHA_BETA_GAMMA", "alphaBetaGamma"], #["", ""]],
)

report(dotKebab(true), "translate - dot to kebab", [#["what.the.hell", "what-the-hell"], #["", ""]])

report(
  dotKebab(false),
  "translate - kebab to dot",
  [#["what-the-hell", "what.the.hell"], #["", ""]],
)

report(
  pascalSentence(true),
  "translate - pascalToSentence",
  [#["MoonUnitAlpha", "Moon unit alpha"], #["", ""]],
)

report(
  pascalSentence(false),
  "translate - sentence to pascal",
  [#["Moon unit alpha", "MoonUnitAlpha"], #["", ""]],
)

report(
  pascalSnakeTrain(true),
  "translate - pascalSnake to train",
  [#["Always_Be_Closing", "Always-Be-Closing"], #["", ""]],
)

report(
  pascalSnakeTrain(false),
  "translate - train to pascalSnake",
  [#["Always-be-closing", "Always_Be_Closing"], #["", ""]],
)


report(snakePath(true), "translate - snake to path", [#["a_b_c", "a/b/c"], #["", ""]])

report(snakePath(false), "translate - path to snake", [#["a/b/c", "a_b_c"], #["", ""]])

report(spaceCamel(true), "translate - space to camel", [#["yo yo yo yo", "yoYoYoYo"], #["", ""]])
report(spaceCamel(false), "translate - space to camel", [#["yoYoYoYo", "yo Yo Yo Yo"], #["", ""]])

report(validInput(pairs.camel), "validInput", [#["coolCoolCool", false]])

report(validatePair(bidi(pairs.camel, pairs.constant)), "validatePair", [#["WHAT_IS_THIS", false]])

report(
  pipe(
    get.camel,
    set.constant,
  ),
  "get / set directly",
  [#["heyHowAreYou", "HEY_HOW_ARE_YOU"]],
)
